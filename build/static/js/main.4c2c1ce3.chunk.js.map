{"version":3,"sources":["config/api.js","CryptoContext.js","components/CoinsTable.js","components/Banner/Carousel.js","components/Banner/Banner.js","Pages/HomePage.js","components/SelectButton.js","config/data.js","components/CoinInfo.js","Pages/CoinPage.js","components/CustomizedInputBase.js","components/Header.js","App.js","index.js"],"names":["CoinList","currency","SingleCoin","id","HistoricalChart","days","Crypto","createContext","CryptoContext","children","useState","setCurrency","symbol","setSymbol","useEffect","Provider","value","CryptoState","useContext","numberWithCommas","x","toString","replace","CoinsTable","props","coins","setCoins","loading","setLoading","search","page","setPage","classes","makeStyles","row_white","backgroundColor","cursor","fontFamily","row_grey","pagination","color","useStyles","history","useHistory","darkTheme","createTheme","palette","primary","main","type","fetchCoins","a","axios","get","data","console","log","handleSearch","filter","coin","name","toLowerCase","includes","String","prototype","EntoFa","this","d","ThemeProvider","theme","Container","style","textAlign","maxWidth","Typography","variant","margin","title","TableContainer","component","Paper","LinearProgress","Table","boxShadow","width","TableHead","TableRow","map","head","TableCell","fontWeight","border","paddingRight","paddingLeft","alignContent","align","TableBody","slice","row","index","profit","price_change_percentage_24h","onClick","push","className","scope","gap","current_price","toFixed","market_cap","Pagination","count","length","padding","display","justifyContent","direction","ul","onChange","_","banner","backgroundImage","bannerContent","height","flexDirection","paddingTop","tagline","carousel","alignItems","Banner","Padding","Homepage","SelectButton","selected","selectbutton","borderRadius","chartDays","label","CoinInfo","historicData","setHistoricData","setDays","container","marginTop","breakpoints","down","fetchHistoricData","prices","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","day","CircularProgress","size","thickness","CoinPage","useParams","setCoin","fetchCoin","sidebar","heading","marginBottom","description","paddingBottom","marketData","alignSelf","src","image","large","alt","ReactHtmlParser","en","split","market_cap_rank","market_data","root","input","marginRight","spacing","flex","iconButton","divider","CustomizedInputBase","timer","setTimer","InputBase","e","change","target","clearTimeout","setTimeout","placeholder","inputProps","Divider","orientation","marginLeft","icon","faSearch","shadow","shadow_0","position","Header","scroll","setScroll","window","addEventListener","scrollY","AppBar","Toolbar","App","minHeight","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAAaA,EAAW,SAACC,GAAD,2EACwCA,EADxC,+DAGXC,EAAa,SAACC,GAAD,uDACkBA,IAE/BC,EAAkB,SAACD,GAAD,IAAKE,EAAL,uDAAY,IAAKJ,EAAjB,8FACaE,EADb,qCAC4CF,EAD5C,iBAC6DI,I,OCLtFC,EAASC,0BAkBAC,EAhBO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,EAAgCC,mBAAS,OAAzC,mBAAOT,EAAP,KAAiBU,EAAjB,KACA,EAA4BD,mBAAS,UAArC,mBAAOE,EAAP,KAAeC,EAAf,KAOA,OALAC,qBAAU,WACS,QAAbb,EAAoBY,EAAU,UACZ,QAAbZ,GAAoBY,EAAU,OACtC,CAACZ,IAGF,cAACK,EAAOS,SAAR,CAAiBC,MAAO,CAAEf,WAAUU,cAAaC,UAAjD,SACGH,KAOMQ,EAAc,WACzB,OAAOC,qBAAWZ,I,4HCAb,SAASa,EAAiBC,GAC/B,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAGxC,SAASC,EAAWC,GAAQ,IAAD,EACxC,EAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KACA,EAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACA,EAA4BlB,mBAAS,IAArC,mBAAOmB,EAAP,KACA,GADA,KACwBnB,mBAAS,IAAjC,mBAAOoB,EAAP,KAAaC,EAAb,KAEA,EAA6Bd,IAArBhB,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,OAsBZoB,EApBYC,YAAW,CAC3BC,UAAW,CACTC,gBAAiB,QACjBC,OAAQ,UAERC,WAAY,WAEdC,SAAU,CACRH,gBAAiB,aACjBC,OAAQ,UAERC,WAAY,WAEdE,WAAY,CACV,4BAA6B,CAC3BC,MAAO,WAKGC,GACVC,EAAUC,cAEVC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,QAERC,KAAM,UAIJC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBvB,GAAW,GADM,SAEMwB,IAAMC,IAAIrD,EAASC,IAFzB,gBAETqD,EAFS,EAETA,KACRC,QAAQC,IAAIF,GAEZ5B,EAAS4B,GACT1B,GAAW,GANM,2CAAH,qDAShBd,qBAAU,WACRoC,MAEC,CAACjD,IAEJ,IAAMwD,EAAe,WACnB,OAAOhC,EAAMiC,QACX,SAACC,GAAD,OACEA,EAAKC,KAAKC,cAAcC,SAASjC,IACjC8B,EAAK/C,OAAOiD,cAAcC,SAASjC,OAMzC,OAHAkC,OAAOC,UAAUC,OAAS,WACxB,OAAOC,KAAK5C,QAAQ,OAAO,SAAC6C,GAAD,MAAO,+DAAaA,OAG/C,cAACC,EAAA,EAAD,CAAeC,MAAOzB,EAAtB,SACE,eAAC0B,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,UAAYC,UAAQ,EAAnD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEK,OAAQ,GAAIvC,WAAY,WAA1D,SACEb,EAAMqD,QAQR,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAAOT,MAAO,CAAEE,SAAS,QAApD,SACG9C,EACC,cAACsD,EAAA,EAAD,CAAgBV,MAAO,CAAEpC,gBAAiB,UAE1C,eAAC+C,EAAA,EAAD,CACE,aAAW,eACXX,MAAO,CAAEY,UAAW,iCAAiCC,MAAM,QAF7D,UAIE,cAACC,EAAA,EAAD,CAAWd,MAAO,CAAEpC,gBAAiB,SAArC,SACE,cAACmD,EAAA,EAAD,UACG,CACC,qBACA,qGACA,yFACA,iCACA,0FACA,iEACA,2BACA,iEACA,yHACA,+HACA,yFACA,+FACA,2IACA,gGACAC,KAAI,SAACC,GAAD,OACJ,cAACC,EAAA,EAAD,CACElB,MAAO,CACL/B,MAAO,QACPkD,WAAY,MACZrD,WAAY,UACZsD,OAAQ,OACRC,aAAc,GACdC,YAAa,GACbC,aAAc,eACdtB,UAAW,UAGbuB,MAAgB,SAATP,EAAkB,GAAK,QAZhC,SAcGA,GAHIA,UASb,cAACQ,EAAA,EAAD,UACGvC,IACEwC,MAAmB,IAAZnE,EAAO,GAAsB,IAAZA,EAAO,GAAU,IACzCyD,KAAI,SAACW,EAAKC,GACT,IAAMC,EAASF,EAAIG,4BAA8B,EACjD,OACE,eAACf,EAAA,EAAD,CACEgB,QAAS,kBAAM5D,EAAQ6D,KAAR,iBAAuBL,EAAI/F,MAC1CqG,UACEL,EAAQ,EAAInE,EAAQE,UAAYF,EAAQM,SAG1CiC,MAAO,CACLqB,aAAc,GACdC,YAAa,GACbC,aAAc,eACdtB,UAAW,UAVf,UAaE,eAACiB,EAAA,EAAD,CACEV,UAAU,KACV0B,MAAM,MACNlC,MAAO,CACLmC,IAAK,GACLf,OAAQ,OAERnB,UAAW,SACXhC,MAAO,SARX,UAiCG0D,EAAItC,KAjCP,IAiCcsC,EAAItF,OAjClB,OAwCA,eAAC6E,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO4D,EAAS,EAAI,oBAAsB,MAC1CV,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG4B,GAAU,IACVF,EAAIG,4BAA4BO,QAAQ,GAAG3C,SAZ9C,OAcA,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIW,WAAWxF,WAAW4E,MAAM,GAAI,GAAGhC,UAb3C,OAiBA,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,YAEJ,eAACwB,EAAA,EAAD,CACEM,MAAM,QACNxB,MAAO,CACL/B,MAAO,QACPkD,WAAY,IACZC,OAAQ,OACRtD,WAAY,UACZyD,aAAc,eACdtB,UAAW,UARf,UAWG5D,EAAQ,IACRO,EACC+E,EAAIS,cAAcC,QAAQ,IAC1B3C,cA7PCiC,EAAItC,gBAwQzB,cAACkD,EAAA,EAAD,CACEC,QAAoB,QAAZ,EAAAtD,WAAA,eAAgBuD,QAAS,IAAIJ,QAAQ,GAC7CrC,MAAO,CACL0C,QAAS,GACT7B,MAAO,OACP8B,QAAS,OACTC,eAAgB,SAChBC,UAAW,kBAEbpF,QAAS,CAAEqF,GAAIrF,EAAQO,YACvB+E,SAAU,SAACC,EAAGvG,GACZe,EAAQf,WC1apB,ICNMyB,EAAYR,aAAW,SAACoC,GAAD,MAAY,CACvCmD,OAAQ,CACNC,gBAAiB,sBAEnBC,cAAe,CACbC,OAAQ,IACRT,QAAS,OACTU,cAAe,SACfC,WAAY,GACZV,eAAgB,gBAElBW,QAAS,CACPZ,QAAS,OACTS,OAAQ,MACRC,cAAe,SACfT,eAAgB,SAChB3C,UAAW,UAEbuD,SAAU,CACRJ,OAAQ,MACRT,QAAS,OACTc,WAAY,cAcDC,MAVf,WACE,IAAMjG,EAAUS,IAEhB,OACE,qBAAK+D,UAAWxE,EAAQwF,UC5BtB/E,EAAYR,aAAW,iBAAO,CAClCiG,QAAS,CACPA,QAAQ,QAcGC,EAXE,WACf,IAAMnG,EAAUS,IAChB,OACE,qCACE,cAAC,EAAD,IACA,qBAAK+D,UAAWxE,EAAQkG,QAAxB,SAAkC,cAAC3G,EAAD,CAAYsD,MAAM,sJACpD,cAACtD,EAAD,CAAYsD,MAAM,8J,kDCkBTuD,EA/BM,SAAC,GAAqC,IAAnC3H,EAAkC,EAAlCA,SAAU4H,EAAwB,EAAxBA,SAAU/B,EAAc,EAAdA,QAsBpCtE,EArBYC,YAAW,CAC3BqG,aAAc,CACZ3C,OAAQ,kBACR4C,aAAc,EACdtB,QAAS,GACTpB,YAAa,GACbD,aAAc,GACdvD,WAAY,UACZD,OAAQ,UACRD,gBAAiBkG,EAAW,QAAU,GACtC7F,MAAO6F,EAAW,aAAe,GACjC3C,WAAY2C,EAAW,IAAM,IAC7B,UAAW,CACTlG,gBAAiB,QACjBK,MAAO,cAET4C,MAAO,QAKK3C,GAEhB,OACE,sBAAM6D,QAASA,EAASE,UAAWxE,EAAQsG,aAA3C,SACG7H,KC5BM+H,EAAY,CACvB,CACEC,MAAO,wCACPzH,MAAO,GAET,CACEyH,MAAO,kCACPzH,MAAO,IAET,CACEyH,MAAO,4BACPzH,MAAO,IAET,CACEyH,MAAO,kCACPzH,MAAO,MC6GI0H,EA9GE,SAAC,GAAc,IAAZ/E,EAAW,EAAXA,KAClB,EAAwCjD,qBAAxC,mBAAOiI,EAAP,KAAqBC,EAArB,KACA,EAAwBlI,mBAAS,GAAjC,mBAAOL,EAAP,KAAawI,EAAb,KACQ5I,EAAagB,IAAbhB,SAoBF+B,EAlBYC,aAAW,SAACoC,GAAD,MAAY,CACvCyE,UAAU,aACR1D,MAAO,MACP8B,QAAS,OACTU,cAAe,SACfI,WAAY,SACZb,eAAgB,SAChB4B,UAAW,GACX9B,QAAS,IACR5C,EAAM2E,YAAYC,KAAK,MAAQ,CAC9B7D,MAAO,OACP2D,UAAW,EACX9B,QAAS,GACTY,WAAY,OAKFpF,GAEVyG,EAAiB,uCAAG,8BAAA/F,EAAA,sEACDC,IAAMC,IAAIjD,EAAgBuD,EAAKxD,GAAIE,EAAMJ,IADxC,gBAChBqD,EADgB,EAChBA,KAERsF,EAAgBtF,EAAK6F,QAHG,2CAAH,qDAMvB5F,QAAQC,IAAIG,GAEZ7C,qBAAU,WACRoI,MAEC,CAAC7I,IAEJ,IAAMuC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,QAERC,KAAM,UAIV,OACE,cAACmB,EAAA,EAAD,CAAeC,MAAOzB,EAAtB,SACE,qBAAK4D,UAAWxE,EAAQ8G,UAAxB,SACIH,EAOA,qCACE,cAAC,IAAD,CACErF,KAAM,CACJ8F,OAAQT,EAAapD,KAAI,SAAC5B,GACxB,IAAI0F,EAAO,IAAIC,KAAK3F,EAAK,IACrB4F,EACFF,EAAKG,WAAa,GAAlB,UACOH,EAAKG,WAAa,GADzB,YAC+BH,EAAKI,aADpC,iBAEOJ,EAAKG,WAFZ,YAE0BH,EAAKI,aAF/B,OAGF,OAAgB,IAATpJ,EAAakJ,EAAOF,EAAKK,wBAGlCC,SAAU,CACR,CACErG,KAAMqF,EAAapD,KAAI,SAAC5B,GAAD,OAAUA,EAAK,MACtC8E,MAAM,gBAAD,OAAkBpI,EAAlB,sBAAoCJ,GACzC2J,YAAa,WAInBC,QAAS,CACPC,SAAU,CACRC,MAAO,CACLC,OAAQ,OAKhB,qBACEzF,MAAO,CACL2C,QAAS,OACT6B,UAAW,GACX5B,eAAgB,eAChB/B,MAAO,QALX,SAQGoD,EAAUjD,KAAI,SAAC0E,GAAD,OACb,cAAC,EAAD,CAEE3D,QAAS,kBAAMuC,EAAQoB,EAAIjJ,QAC3BqH,SAAU4B,EAAIjJ,QAAUX,EAH1B,SAKG4J,EAAIxB,OAJAwB,EAAIjJ,eA5CjB,cAACkJ,EAAA,EAAD,CACE3F,MAAO,CAAE/B,MAAO,SAChB2H,KAAM,IACNC,UAAW,SCyFRC,EAnJE,WACf,IAAQlK,EAAOmK,cAAPnK,GACR,EAAwBO,qBAAxB,mBAAOiD,EAAP,KAAa4G,EAAb,KAEA,EAA6BtJ,IAArBhB,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,OAEZ4J,EAAS,uCAAG,8BAAArH,EAAA,sEACOC,IAAMC,IAAInD,EAAWC,IAD5B,gBACRmD,EADQ,EACRA,KAERiH,EAAQjH,GAHQ,2CAAH,qDAMfxC,qBAAU,WACR0J,MAEC,IAEH,IAmDMxI,EAnDYC,aAAW,SAACoC,GAAD,cAAY,CACvCyE,UAAU,aACR5B,QAAS,QACR7C,EAAM2E,YAAYC,KAAK,MAAQ,CAC9BrB,cAAe,SACfI,WAAY,WAGhByC,SAAO,GACLrF,MAAO,OADF,cAEJf,EAAM2E,YAAYC,KAAK,MAAQ,CAC9B7D,MAAO,SAHJ,wBAKI,QALJ,8BAMU,UANV,2BAOO,UAPP,0BAQM,IARN,4BASQ,kBATR,GAWPsF,QAAS,CACPhF,WAAY,OACZiF,aAAc,GACdtI,WAAY,WAEduI,YAAa,CACXxF,MAAO,OACP/C,WAAY,UACZ4E,QAAS,GACT4D,cAAe,GACfhD,WAAY,EACZrD,UAAW,WAEbsG,YAAU,GACRC,UAAW,QACX9D,QAAS,GACTY,WAAY,GACZzC,MAAO,QAJC,cAKPf,EAAM2E,YAAYC,KAAK,MAAQ,CAC9B/B,QAAS,OACTC,eAAgB,iBAPV,cASP9C,EAAM2E,YAAYC,KAAK,MAAQ,CAC9BrB,cAAe,SACfI,WAAY,WAXN,cAaP3D,EAAM2E,YAAYC,KAAK,MAAQ,CAC9BjB,WAAY,UAdN,MAmBIvF,GAEhB,OAAKkB,EAGH,sBAAK6C,UAAWxE,EAAQ8G,UAAxB,UACE,sBAAKtC,UAAWxE,EAAQyI,QAAxB,UACE,qBACEO,IAAG,OAAErH,QAAF,IAAEA,OAAF,EAAEA,EAAMsH,MAAMC,MACjBC,IAAG,OAAExH,QAAF,IAAEA,OAAF,EAAEA,EAAMC,KACX+D,OAAO,MACPpD,MAAO,CAAEoG,aAAc,MAEzB,cAACjG,EAAA,EAAD,CAAYC,QAAQ,KAAK6B,UAAWxE,EAAQ0I,QAA5C,gBACG/G,QADH,IACGA,OADH,EACGA,EAAMC,OAET,eAACc,EAAA,EAAD,CAAYC,QAAQ,YAAY6B,UAAWxE,EAAQ4I,YAAnD,UACGQ,IAAe,OAACzH,QAAD,IAACA,OAAD,EAACA,EAAMiH,YAAYS,GAAGC,MAAM,MAAM,IADpD,OAGA,sBAAK9E,UAAWxE,EAAQ8I,WAAxB,UACE,uBAAMvG,MAAO,CAAE2C,QAAS,QAAxB,UACE,cAACxC,EAAA,EAAD,CAAYC,QAAQ,KAAK6B,UAAWxE,EAAQ0I,QAA5C,wCADF,YAKE,cAAChG,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CACLlC,WAAY,WAHhB,SAMGlB,EAAgB,OAACwC,QAAD,IAACA,OAAD,EAACA,EAAM4H,iBAAiBtH,cAI7C,uBAAMM,MAAO,CAAE2C,QAAS,QAAxB,UACE,cAACxC,EAAA,EAAD,CAAYC,QAAQ,KAAK6B,UAAWxE,EAAQ0I,QAA5C,iEADF,YAKE,eAAChG,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CACLlC,WAAY,WAHhB,UAMGzB,EAAQ,IACRO,EAAgB,OACfwC,QADe,IACfA,OADe,EACfA,EAAM6H,YAAY7E,cAAc1G,EAAS4D,gBACzCI,eAGN,uBAAMM,MAAO,CAAE2C,QAAS,QAAxB,UACE,cAACxC,EAAA,EAAD,CAAYC,QAAQ,KAAK6B,UAAWxE,EAAQ0I,QAA5C,uEADF,YAKE,eAAChG,EAAA,EAAD,CACEC,QAAQ,KACRJ,MAAO,CACLlC,WAAY,WAHhB,UAMGzB,EAAQ,IACRO,GACC,OAACwC,QAAD,IAACA,OAAD,EAACA,EAAM6H,YAAY3E,WAAW5G,EAAS4D,eACpCxC,WACA4E,MAAM,GAAI,IAAIhC,UAVrB,gBAiBN,cAAC,EAAD,CAAUN,KAAMA,OAxEF,cAACsB,EAAA,EAAD,CAAgBV,MAAO,CAAEpC,gBAAiB,W,uDCzExDM,GAAYR,aAAW,SAACoC,GAAD,MAAY,CACvCoH,KAAM,CACJtJ,gBAAiB,QACjB8E,QAAS,UACTC,QAAS,OACTc,WAAY,MACZ5C,MAAO,KAETsG,MAAO,CACLC,YAAatH,EAAMuH,QAAQ,GAC3BC,KAAM,EACNxJ,WAAY,WAGdyJ,WAAY,CACV7E,QAAS,IAEX8E,QAAS,CACPpE,OAAQ,GACR/C,OAAQ,OAIG,SAASoH,KACtB,MAA0BtL,mBAAS,MAAnC,mBAAOuL,EAAP,KAAcC,EAAd,KAaA,IAAMlK,EAAUS,KAEhB,OACE,8BAEE,eAACuC,EAAA,EAAD,CAAOD,UAAU,OAAQyB,UAAWxE,EAAQyJ,KAA5C,UACE,cAACU,EAAA,EAAD,CACE7E,SAAU,SAAC8E,GAlBnB,IAAqBC,IAmBCD,EAAEE,OAAOtL,MAlBzBiL,IACFM,aAAaN,GACbC,EAAS,OAEXA,EACEM,YAAW,WACTjJ,QAAQC,IAAI6I,KACX,OAaC7F,UAAWxE,EAAQ0J,MACnBe,YAAY,iCACZC,WAAY,CAAE,aAAc,sBAC5BlK,MAAM,YAER,cAACmK,GAAA,EAAD,CAASnG,UAAWxE,EAAQ+J,QAASa,YAAY,aACjD,cAAC,KAAD,CAAiBrI,MAAO,CAAEoG,aAAa,GAAIkC,WAAW,IAAMrK,MAAM,OAAOsK,KAAMC,YCvCvF,IAAMtK,GAAYR,aAAW,SAACoC,GAAD,MAAY,CACvCQ,MAAO,CACLgH,KAAM,EACNrJ,MAAO,QACPH,WAAY,UACZqD,WAAY,OACZtD,OAAQ,WAEV4K,OAAO,CACL7H,UAAU,kCAGZ8H,SAAS,CACP9H,UAAU,mBAGZtD,OAAO,CACL+H,YAAY,mBACZsD,SAAS,WACT1K,MAAM,wBAKJI,GAAYC,YAAY,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,oBAERC,KAAM,UAuCKkK,OAnCf,WACE,MAA4BzM,oBAAS,GAArC,mBAAO0M,EAAP,KAAeC,EAAf,KACDvM,qBAAU,WACRwM,OAAOC,iBAAiB,UAAU,WAChCF,EAAUC,OAAOE,QAAU,UAE5B,IACF,IAAMxL,EAAUS,KAChB,EAAkCxB,IAE5ByB,GAFN,EAAQzC,SAAR,EAAkBU,YAEFgC,eAEhB,OACE,cAACyB,EAAA,EAAD,CAAeC,MAAOzB,GAAtB,SACE,cAAC6K,EAAA,EAAD,CAAQP,SAAS,SAAS1G,UAAW4G,EAAS,WAAa,SAA3D,SACA,cAAC9I,EAAA,EAAD,CAAWG,UAAQ,EAAnB,SACI,eAACiJ,EAAA,EAAD,WACE,cAAChJ,EAAA,EAAD,CACE4B,QAAS,kBAAM5D,EAAQ6D,KAAR,MACfC,UAAWxE,EAAQ6C,MACnBN,MAAO,CAAEsH,KAAK,EAAEzG,MAAO,QAASuC,OAAQ,OAAO7B,aAAa,QAAS+G,WAAY,GAAGrK,MAAM,QAAQoH,YAAY,QAAQpF,UAAU,SAHlI,uFAUA,cAACwH,GAAD,cC1ENvJ,GAAYR,aAAW,iBAAO,CAClC0L,IAAK,CACHxL,gBAAiB,UACjBK,MAAO,QACPoL,UAAW,QACXnJ,SAAU,aAkBCkJ,OAdf,WACE,IAAM3L,EAAUS,KAEhB,OACE,cAAC,IAAD,UACE,sBAAK+D,UAAWxE,EAAQ2L,IAAxB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAOE,KAAK,IAAI9I,UAAWoD,EAAU2F,OAAK,IAC1C,cAAC,IAAD,CAAOD,KAAK,aAAa9I,UAAWsF,EAAUyD,OAAK,U,OCjB3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.4c2c1ce3.chunk.js","sourcesContent":["export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"AED\");\r\n  const [symbol, setSymbol] = useState(\"☫\");\r\n\r\n  useEffect(() => {\r\n    if (currency === \"AED\") setSymbol(\"☫\");\r\n    else if (currency === \"USD\") setSymbol(\"$\");\r\n  }, [currency]);\r\n\r\n  return (\r\n    <Crypto.Provider value={{ currency, setCurrency, symbol }}>\r\n      {children}\r\n    </Crypto.Provider>\r\n  );\r\n};\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {\r\n  Container,\r\n  createTheme,\r\n  TableCell,\r\n  LinearProgress,\r\n  ThemeProvider,\r\n  Typography,\r\n  TextField,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  Table,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"../config/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport default function CoinsTable(props) {\r\n  const [coins, setCoins] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const useStyles = makeStyles({\r\n    row_white: {\r\n      backgroundColor: \"white\",\r\n      cursor: \"pointer\",\r\n\r\n      fontFamily: \"Shabnam\",\r\n    },\r\n    row_grey: {\r\n      backgroundColor: \"ghostwhite\",\r\n      cursor: \"pointer\",\r\n\r\n      fontFamily: \"Shabnam\",\r\n    },\r\n    pagination: {\r\n      \"& .MuiPaginationItem-root\": {\r\n        color: \"black\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#000\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  const fetchCoins = async () => {\r\n    setLoading(true);\r\n    const { data } = await axios.get(CoinList(currency));\r\n    console.log(data);\r\n\r\n    setCoins(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCoins();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currency]);\r\n\r\n  const handleSearch = () => {\r\n    return coins.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search) ||\r\n        coin.symbol.toLowerCase().includes(search)\r\n    );\r\n  };\r\n  String.prototype.EntoFa = function () {\r\n    return this.replace(/\\d/g, (d) => \"۰۱۲۳۴۵۶۷۸۹\"[d]);\r\n  };\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container style={{ textAlign: \"center\" }} maxWidth>\r\n        <Typography variant=\"h4\" style={{ margin: 18, fontFamily: \"Shabnam\" }}>\r\n         {props.title}\r\n        </Typography>\r\n        {/* <TextField\r\n          label=\"اینجا اسم سهم را بنویس ...\"\r\n          variant=\"outlined\"\r\n          style={{ marginBottom: 20, width: \"100%\", color: \"black\" ,borderColor:\"black\"}}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        /> */}\r\n        <TableContainer component={Paper} style={{ maxWidth:\"100%\" }}>\r\n          {loading ? (\r\n            <LinearProgress style={{ backgroundColor: \"grey\" }} />\r\n          ) : (\r\n            <Table\r\n              aria-label=\"simple table\"\r\n              style={{ boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",width:\"100%\" }}\r\n            >\r\n              <TableHead style={{ backgroundColor: \"white\" }}>\r\n                <TableRow>\r\n                  {[\r\n                    \"سهم\",\r\n                    \"پیشنهاد هیئت مدیره\",\r\n                    \"اظهار نظر حسابرس\",\r\n                    \"مدارک\",\r\n                    \"آگهی دعوت به مجمع\",\r\n                    \"بسته شدن سهم\",\r\n                    \"مجمع\",\r\n                    \"باز شدن نماد\",\r\n                    \"شروع استفاده از حق تقدم\",\r\n                    \"پایان استفاده از حق تقدم\",\r\n                    \"شروع پذیره نویسی\",\r\n                    \"پایان پذیره نویسی\",\r\n                    \"نتایج حق تقدم استفاده نشده\",\r\n                    \"ثبت افزایش سرمایه\",\r\n                  ].map((head) => (\r\n                    <TableCell\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontWeight: \"600\",\r\n                        fontFamily: \"Shabnam\",\r\n                        border: \"none\",\r\n                        paddingRight: 20,\r\n                        paddingLeft: 20,\r\n                        alignContent: \"space-evenly\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                      key={head}\r\n                      align={head === \"Coin\" ? \"\" : \"right\"}\r\n                    >\r\n                      {head}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {handleSearch()\r\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                  .map((row, index) => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={() => history.push(`/coins/${row.id}`)}\r\n                        className={\r\n                          index % 2 ? classes.row_white : classes.row_grey\r\n                        }\r\n                        key={row.name}\r\n                        style={{\r\n                          paddingRight: 20,\r\n                          paddingLeft: 20,\r\n                          alignContent: \"space-evenly\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{\r\n                            gap: 15,\r\n                            border: \"none\",\r\n\r\n                            textAlign: \"center\",\r\n                            color: \"black\",\r\n                          }}\r\n                        >\r\n                          {/* <img\r\n                            src={row?.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10,\r\n                              alignContent:\"space-evenly\",\r\n                            textAlign:\"center\" }}\r\n                          />\r\n                          <div\r\n                            style={{ display: \"flex\", flexDirection: \"column\" ,\r\n                            alignContent:\"space-evenly\",\r\n                          textAlign:\"center\"}}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"uppercase\",\r\n                                fontSize: 22,\r\n                                color: \"black\",\r\n                                alignContent:\"space-evenly\",\r\n                              textAlign:\"center\"\r\n                              }}\r\n                            > */}\r\n                          {row.name}({row.symbol})\r\n                          {/* </span>\r\n                            <span style={{ color: \"darkgrey\" }}>\r\n                              {row.name}\r\n                            </span>\r\n                          </div> */}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {profit && \"+\"}\r\n                          {row.price_change_percentage_24h.toFixed(2).EntoFa()}%\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.market_cap.toString().slice(0, -6).EntoFa()\r\n                          )}\r\n                          M\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: 500,\r\n                            border: \"none\",\r\n                            fontFamily: \"Shabnam\",\r\n                            alignContent: \"space-evenly\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.current_price.toFixed(2)\r\n                          ).EntoFa()}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </TableContainer>\r\n\r\n        {/* Comes from @material-ui/lab */}\r\n        <Pagination\r\n          count={(handleSearch()?.length / 10).toFixed(0)}\r\n          style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            direction: \"ltr !important\",\r\n          }}\r\n          classes={{ ul: classes.pagination }}\r\n          onChange={(_, value) => {\r\n            setPage(value);\r\n          }}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AliceCarousel from \"react-alice-carousel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TrendingCoins } from \"../../config/api\";\r\nimport { CryptoState } from \"../../CryptoContext\";\r\nimport { numberWithCommas } from \"../CoinsTable\";\r\n\r\nconst Carousel = () => {\r\n  const [trending, setTrending] = useState([]);\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const fetchTrendingCoins = async () => {\r\n    const { data } = await axios.get(TrendingCoins(currency));\r\n\r\n    console.log(data);\r\n    setTrending(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrendingCoins();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currency]);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    carousel: {\r\n      height: \"50%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \r\n    },\r\n    carouselItem: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      cursor: \"pointer\",\r\n      textTransform: \"uppercase\",\r\n      color: \"white\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const items = trending.map((coin) => {\r\n    let profit = coin?.price_change_percentage_24h >= 0;\r\n\r\n    return (\r\n      <Link className={classes.carouselItem} to={`/coins/${coin.id}`}>\r\n        <img\r\n          src={coin?.image}\r\n          alt={coin.name}\r\n          height=\"80\"\r\n          style={{ marginBottom: 10 }}\r\n        />\r\n        <span>\r\n          {coin?.symbol}\r\n          &nbsp;\r\n          <span\r\n            style={{\r\n              color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            {profit && \"+\"}\r\n            {coin?.price_change_percentage_24h?.toFixed(2)}%\r\n          </span>\r\n        </span>\r\n        <span style={{ fontSize: 22, fontWeight: 500 }}>\r\n          {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n        </span>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  const responsive = {\r\n    0: {\r\n      items: 2,\r\n    },\r\n    512: {\r\n      items: 4,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={classes.carousel}>\r\n      <AliceCarousel\r\n        mouseTracking\r\n        infinite\r\n        autoPlayInterval={1000}\r\n        animationDuration={1500}\r\n        disableDotsControls\r\n        disableButtonsControls\r\n        responsive={responsive}\r\n        items={items}\r\n        autoPlay\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import { Container, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Carousel from \"./Carousel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  banner: {\r\n    backgroundImage: \"url(./banner2.jpg)\",\r\n  },\r\n  bannerContent: {\r\n    height: 400,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingTop: 25,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  tagline: {\r\n    display: \"flex\",\r\n    height: \"40%\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  carousel: {\r\n    height: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Banner() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.banner}>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport CoinsTable from \"../components/CoinsTable\";\r\nconst useStyles = makeStyles(() => ({\r\n  Padding: {\r\n    Padding:20,\r\n  },\r\n}));\r\nconst Homepage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <div className={classes.Padding} ><CoinsTable title=\"افزایش سرمایه به روش حق تقدم\" /></div>\r\n      <CoinsTable title=\"افزایش سرمایه به روش های دیگر\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst SelectButton = ({ children, selected, onClick }) => {\r\n  const useStyles = makeStyles({\r\n    selectbutton: {\r\n      border: \"1px solid black\",\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n      fontFamily: \"Shabnam\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: selected ? \"black\" : \"\",\r\n      color: selected ? \"whitesmoke\" : \"\",\r\n      fontWeight: selected ? 700 : 500,\r\n      \"&:hover\": {\r\n        backgroundColor: \"black\",\r\n        color: \"whitesmoke\",\r\n      },\r\n      width: \"22%\",\r\n      //   margin: 5,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span onClick={onClick} className={classes.selectbutton}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default SelectButton;\r\n","export const chartDays = [\r\n  {\r\n    label: \"۲۴ ساعت\",\r\n    value: 1,\r\n  },\r\n  {\r\n    label: \"۳۰ روز\",\r\n    value: 30,\r\n  },\r\n  {\r\n    label: \"۳ ماه\",\r\n    value: 90,\r\n  },\r\n  {\r\n    label: \"یک سال\",\r\n    value: 365,\r\n  },\r\n];\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HistoricalChart } from \"../config/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  CircularProgress,\r\n  createTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport SelectButton from \"./SelectButton\";\r\nimport { chartDays } from \"../config/data\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n  const [historicData, setHistoricData] = useState();\r\n  const [days, setDays] = useState(1);\r\n  const { currency } = CryptoState();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      width: \"75%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 25,\r\n      padding: 40,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n        marginTop: 0,\r\n        padding: 20,\r\n        paddingTop: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const fetchHistoricData = async () => {\r\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\r\n\r\n    setHistoricData(data.prices);\r\n  };\r\n\r\n  console.log(coin);\r\n\r\n  useEffect(() => {\r\n    fetchHistoricData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [days]);\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.container}>\r\n        {!historicData ? (\r\n          <CircularProgress\r\n            style={{ color: \"black\" }}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historicData.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time =\r\n                    date.getHours() > 12\r\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                  return days === 1 ? time : date.toLocaleDateString();\r\n                }),\r\n\r\n                datasets: [\r\n                  {\r\n                    data: historicData.map((coin) => coin[1]),\r\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                    borderColor: \"black\",\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                elements: {\r\n                  point: {\r\n                    radius: 1,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                justifyContent: \"space-around\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {chartDays.map((day) => (\r\n                <SelectButton\r\n                  key={day.value}\r\n                  onClick={() => setDays(day.value)}\r\n                  selected={day.value === days}\r\n                >\r\n                  {day.label}\r\n                </SelectButton>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CoinInfo;\r\n","import { LinearProgress, makeStyles, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport CoinInfo from \"../components/CoinInfo\";\r\nimport { SingleCoin } from \"../config/api\";\r\nimport { numberWithCommas } from \"../components/CoinsTable\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nconst CoinPage = () => {\r\n  const { id } = useParams();\r\n  const [coin, setCoin] = useState();\r\n\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const fetchCoin = async () => {\r\n    const { data } = await axios.get(SingleCoin(id));\r\n\r\n    setCoin(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCoin();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      },\r\n    },\r\n    sidebar: {\r\n      width: \"30%\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n      },\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      marginTop: 25,\r\n      borderRight: \"2px solid grey\",\r\n    },\r\n    heading: {\r\n      fontWeight: \"bold\",\r\n      marginBottom: 20,\r\n      fontFamily: \"Shabnam\",\r\n    },\r\n    description: {\r\n      width: \"100%\",\r\n      fontFamily: \"Shabnam\",\r\n      padding: 25,\r\n      paddingBottom: 15,\r\n      paddingTop: 0,\r\n      textAlign: \"justify\",\r\n    },\r\n    marketData: {\r\n      alignSelf: \"start\",\r\n      padding: 25,\r\n      paddingTop: 10,\r\n      width: \"100%\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        alignItems: \"start\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"grey\" }} />;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.sidebar}>\r\n        <img\r\n          src={coin?.image.large}\r\n          alt={coin?.name}\r\n          height=\"200\"\r\n          style={{ marginBottom: 20 }}\r\n        />\r\n        <Typography variant=\"h3\" className={classes.heading}>\r\n          {coin?.name}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" className={classes.description}>\r\n          {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\r\n        </Typography>\r\n        <div className={classes.marketData}>\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" className={classes.heading}>\r\n             رتبه : \r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              {numberWithCommas(coin?.market_cap_rank).EntoFa()}\r\n            </Typography>\r\n          </span>\r\n\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" className={classes.heading}>\r\n              قیمت فعلی :\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              {symbol}{\" \"}\r\n              {numberWithCommas(\r\n                coin?.market_data.current_price[currency.toLowerCase()]\r\n              ).EntoFa()}\r\n            </Typography>\r\n          </span>\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" className={classes.heading}>\r\n             ارزش بازار : \r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              {symbol}{\" \"}\r\n              {numberWithCommas(\r\n                (coin?.market_data.market_cap[currency.toLowerCase()]\r\n                  .toString()\r\n                  .slice(0, -6)).EntoFa()\r\n              )}\r\n              M\r\n            </Typography>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <CoinInfo coin={coin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinPage;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"end\",\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginRight: theme.spacing(1),\r\n    flex: 1,\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedInputBase() {\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  function changeDelay(change) {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      setTimer(null);\r\n    }\r\n    setTimer(\r\n      setTimeout(() => {\r\n        console.log(change);\r\n      }, 700 )\r\n    );\r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Paper component=\"text\"  className={classes.root}>\r\n        <InputBase\r\n          onChange={(e) => {\r\n            changeDelay(e.target.value);\r\n          }}\r\n          className={classes.input}\r\n          placeholder=\"جستجو\"\r\n          inputProps={{ \"aria-label\": \"search google maps\" }}\r\n          color=\"primary\"\r\n        />\r\n        <Divider className={classes.divider} orientation=\"vertical\" />\r\n        <FontAwesomeIcon style={{ marginBottom:10 ,marginLeft:10 }} color=\"grey\" icon={faSearch} />\r\n\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Container,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n  Input \r\n} from \"@material-ui/core\";\r\nimport {\r\n  createTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\nimport CustomizedInputBase from \"../components/CustomizedInputBase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flex: 1,\r\n    color: \"black\",\r\n    fontFamily: \"Shabnam\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n  },\r\n  shadow:{\r\n    boxShadow:\"0 2px 2px -2px gray !important\"\r\n\r\n  },\r\n  shadow_0:{\r\n    boxShadow:\"none !important\"\r\n\r\n  },\r\n  search:{\r\n    borderColor:\"black !important\",\r\n    position:\"relative\",\r\n    color:\"black !important\",\r\n\r\n  },\r\n}));\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(243,244,248)\",\r\n    },\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nfunction Header() {\r\n  const [scroll, setScroll] = useState(false);\r\n useEffect(() => {\r\n   window.addEventListener(\"scroll\", () => {\r\n     setScroll(window.scrollY > 100);\r\n   });\r\n }, []);\r\n  const classes = useStyles();\r\n  const { currency, setCurrency } = CryptoState();\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <AppBar position=\"sticky\" className={scroll ? \"shadow_0\" : \"shadow\"} > \r\n      <Container maxWidth>\r\n          <Toolbar>\r\n            <Typography\r\n              onClick={() => history.push(`/`)}\r\n              className={classes.title}\r\n              style={{ flex:1,width: \"150px\", height: \"auto\",alignContent:\"start\", marginLeft: 15,color:\"black\",borderColor:\"black\",textAlign:\"right\"}}\r\n\r\n            >\r\n              افزایش سرمایه\r\n            </Typography>\r\n            {/* <Button variant=\"contained\" color=\"inherit\">Login</Button> */}\r\n            {/* <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /> */}\r\n            <CustomizedInputBase />\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Homepage from \"./Pages/HomePage\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport CoinPage from \"./Pages/CoinPage\";\r\nimport Header from \"./components/Header\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  App: {\r\n    backgroundColor: \"#f3f4f8\",\r\n    color: \"black\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"100vw\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={classes.App}>\r\n        <Header />\r\n        <Route path=\"/\" component={Homepage} exact />\r\n        <Route path=\"/coins/:id\" component={CoinPage} exact />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport CryptoContext from \"./CryptoContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CryptoContext>\r\n      <App />\r\n    </CryptoContext>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}